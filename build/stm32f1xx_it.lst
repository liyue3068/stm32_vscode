ARM GAS  /tmp/cc3cqCLn.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB66:
  26              		.file 1 "Core/Src/stm32f1xx_it.c"
   1:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f1xx_it.c **** /**
   3:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Core/Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f1xx_it.c ****   * @attention
   8:Core/Src/stm32f1xx_it.c ****   *
   9:Core/Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Core/Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f1xx_it.c ****   *
  12:Core/Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32f1xx_it.c ****   *
  17:Core/Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32f1xx_it.c ****   */
  19:Core/Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32f1xx_it.c **** 
  21:Core/Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f1xx_it.c **** #include "main.h"
  23:Core/Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  24:Core/Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32f1xx_it.c **** 
  28:Core/Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32f1xx_it.c **** 
  31:Core/Src/stm32f1xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32f1xx_it.c **** 
ARM GAS  /tmp/cc3cqCLn.s 			page 2


  33:Core/Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32f1xx_it.c ****  
  36:Core/Src/stm32f1xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32f1xx_it.c **** 
  38:Core/Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32f1xx_it.c **** 
  41:Core/Src/stm32f1xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32f1xx_it.c **** 
  43:Core/Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32f1xx_it.c **** 
  46:Core/Src/stm32f1xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32f1xx_it.c **** 
  48:Core/Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32f1xx_it.c **** 
  51:Core/Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32f1xx_it.c **** 
  53:Core/Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32f1xx_it.c **** 
  56:Core/Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32f1xx_it.c **** 
  58:Core/Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32f1xx_it.c **** 
  60:Core/Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32f1xx_it.c **** 
  62:Core/Src/stm32f1xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32f1xx_it.c **** 
  64:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  66:Core/Src/stm32f1xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32f1xx_it.c **** /**
  68:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Core/Src/stm32f1xx_it.c ****   */
  70:Core/Src/stm32f1xx_it.c **** void NMI_Handler(void)
  71:Core/Src/stm32f1xx_it.c **** {
  27              		.loc 1 71 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  72:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32f1xx_it.c **** 
  74:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Core/Src/stm32f1xx_it.c **** 
  77:Core/Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
ARM GAS  /tmp/cc3cqCLn.s 			page 3


  78:Core/Src/stm32f1xx_it.c **** }
  39              		.loc 1 78 1
  40 0004 00BF     		nop
  41 0006 BD46     		mov	sp, r7
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 13
  44              		@ sp needed
  45 0008 80BC     		pop	{r7}
  46              	.LCFI3:
  47              		.cfi_restore 7
  48              		.cfi_def_cfa_offset 0
  49 000a 7047     		bx	lr
  50              		.cfi_endproc
  51              	.LFE66:
  53              		.section	.text.HardFault_Handler,"ax",%progbits
  54              		.align	1
  55              		.global	HardFault_Handler
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	HardFault_Handler:
  62              	.LFB67:
  79:Core/Src/stm32f1xx_it.c **** 
  80:Core/Src/stm32f1xx_it.c **** /**
  81:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  82:Core/Src/stm32f1xx_it.c ****   */
  83:Core/Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  84:Core/Src/stm32f1xx_it.c **** {
  63              		.loc 1 84 1
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 1, uses_anonymous_args = 0
  67              		@ link register save eliminated.
  68 0000 80B4     		push	{r7}
  69              	.LCFI4:
  70              		.cfi_def_cfa_offset 4
  71              		.cfi_offset 7, -4
  72 0002 00AF     		add	r7, sp, #0
  73              	.LCFI5:
  74              		.cfi_def_cfa_register 7
  75              	.L3:
  85:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  86:Core/Src/stm32f1xx_it.c **** 
  87:Core/Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  88:Core/Src/stm32f1xx_it.c ****   while (1)
  76              		.loc 1 88 9 discriminator 1
  77 0004 FEE7     		b	.L3
  78              		.cfi_endproc
  79              	.LFE67:
  81              		.section	.text.MemManage_Handler,"ax",%progbits
  82              		.align	1
  83              		.global	MemManage_Handler
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  87              		.fpu softvfp
ARM GAS  /tmp/cc3cqCLn.s 			page 4


  89              	MemManage_Handler:
  90              	.LFB68:
  89:Core/Src/stm32f1xx_it.c ****   {
  90:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  91:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  92:Core/Src/stm32f1xx_it.c ****   }
  93:Core/Src/stm32f1xx_it.c **** }
  94:Core/Src/stm32f1xx_it.c **** 
  95:Core/Src/stm32f1xx_it.c **** /**
  96:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
  97:Core/Src/stm32f1xx_it.c ****   */
  98:Core/Src/stm32f1xx_it.c **** void MemManage_Handler(void)
  99:Core/Src/stm32f1xx_it.c **** {
  91              		.loc 1 99 1
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 1, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96 0000 80B4     		push	{r7}
  97              	.LCFI6:
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 7, -4
 100 0002 00AF     		add	r7, sp, #0
 101              	.LCFI7:
 102              		.cfi_def_cfa_register 7
 103              	.L5:
 100:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 101:Core/Src/stm32f1xx_it.c **** 
 102:Core/Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 103:Core/Src/stm32f1xx_it.c ****   while (1)
 104              		.loc 1 103 9 discriminator 1
 105 0004 FEE7     		b	.L5
 106              		.cfi_endproc
 107              	.LFE68:
 109              		.section	.text.BusFault_Handler,"ax",%progbits
 110              		.align	1
 111              		.global	BusFault_Handler
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu softvfp
 117              	BusFault_Handler:
 118              	.LFB69:
 104:Core/Src/stm32f1xx_it.c ****   {
 105:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 107:Core/Src/stm32f1xx_it.c ****   }
 108:Core/Src/stm32f1xx_it.c **** }
 109:Core/Src/stm32f1xx_it.c **** 
 110:Core/Src/stm32f1xx_it.c **** /**
 111:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 112:Core/Src/stm32f1xx_it.c ****   */
 113:Core/Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 114:Core/Src/stm32f1xx_it.c **** {
 119              		.loc 1 114 1
 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc3cqCLn.s 			page 5


 122              		@ frame_needed = 1, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124 0000 80B4     		push	{r7}
 125              	.LCFI8:
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 7, -4
 128 0002 00AF     		add	r7, sp, #0
 129              	.LCFI9:
 130              		.cfi_def_cfa_register 7
 131              	.L7:
 115:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 116:Core/Src/stm32f1xx_it.c **** 
 117:Core/Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 118:Core/Src/stm32f1xx_it.c ****   while (1)
 132              		.loc 1 118 9 discriminator 1
 133 0004 FEE7     		b	.L7
 134              		.cfi_endproc
 135              	.LFE69:
 137              		.section	.text.UsageFault_Handler,"ax",%progbits
 138              		.align	1
 139              		.global	UsageFault_Handler
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu softvfp
 145              	UsageFault_Handler:
 146              	.LFB70:
 119:Core/Src/stm32f1xx_it.c ****   {
 120:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 121:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 122:Core/Src/stm32f1xx_it.c ****   }
 123:Core/Src/stm32f1xx_it.c **** }
 124:Core/Src/stm32f1xx_it.c **** 
 125:Core/Src/stm32f1xx_it.c **** /**
 126:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 127:Core/Src/stm32f1xx_it.c ****   */
 128:Core/Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 129:Core/Src/stm32f1xx_it.c **** {
 147              		.loc 1 129 1
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152 0000 80B4     		push	{r7}
 153              	.LCFI10:
 154              		.cfi_def_cfa_offset 4
 155              		.cfi_offset 7, -4
 156 0002 00AF     		add	r7, sp, #0
 157              	.LCFI11:
 158              		.cfi_def_cfa_register 7
 159              	.L9:
 130:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 131:Core/Src/stm32f1xx_it.c **** 
 132:Core/Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 133:Core/Src/stm32f1xx_it.c ****   while (1)
 160              		.loc 1 133 9 discriminator 1
 161 0004 FEE7     		b	.L9
ARM GAS  /tmp/cc3cqCLn.s 			page 6


 162              		.cfi_endproc
 163              	.LFE70:
 165              		.section	.text.SVC_Handler,"ax",%progbits
 166              		.align	1
 167              		.global	SVC_Handler
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu softvfp
 173              	SVC_Handler:
 174              	.LFB71:
 134:Core/Src/stm32f1xx_it.c ****   {
 135:Core/Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 136:Core/Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 137:Core/Src/stm32f1xx_it.c ****   }
 138:Core/Src/stm32f1xx_it.c **** }
 139:Core/Src/stm32f1xx_it.c **** 
 140:Core/Src/stm32f1xx_it.c **** /**
 141:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 142:Core/Src/stm32f1xx_it.c ****   */
 143:Core/Src/stm32f1xx_it.c **** void SVC_Handler(void)
 144:Core/Src/stm32f1xx_it.c **** {
 175              		.loc 1 144 1
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180 0000 80B4     		push	{r7}
 181              	.LCFI12:
 182              		.cfi_def_cfa_offset 4
 183              		.cfi_offset 7, -4
 184 0002 00AF     		add	r7, sp, #0
 185              	.LCFI13:
 186              		.cfi_def_cfa_register 7
 145:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 146:Core/Src/stm32f1xx_it.c **** 
 147:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 148:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 149:Core/Src/stm32f1xx_it.c **** 
 150:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 151:Core/Src/stm32f1xx_it.c **** }
 187              		.loc 1 151 1
 188 0004 00BF     		nop
 189 0006 BD46     		mov	sp, r7
 190              	.LCFI14:
 191              		.cfi_def_cfa_register 13
 192              		@ sp needed
 193 0008 80BC     		pop	{r7}
 194              	.LCFI15:
 195              		.cfi_restore 7
 196              		.cfi_def_cfa_offset 0
 197 000a 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE71:
 201              		.section	.text.DebugMon_Handler,"ax",%progbits
 202              		.align	1
 203              		.global	DebugMon_Handler
ARM GAS  /tmp/cc3cqCLn.s 			page 7


 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu softvfp
 209              	DebugMon_Handler:
 210              	.LFB72:
 152:Core/Src/stm32f1xx_it.c **** 
 153:Core/Src/stm32f1xx_it.c **** /**
 154:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 155:Core/Src/stm32f1xx_it.c ****   */
 156:Core/Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 157:Core/Src/stm32f1xx_it.c **** {
 211              		.loc 1 157 1
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 1, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216 0000 80B4     		push	{r7}
 217              	.LCFI16:
 218              		.cfi_def_cfa_offset 4
 219              		.cfi_offset 7, -4
 220 0002 00AF     		add	r7, sp, #0
 221              	.LCFI17:
 222              		.cfi_def_cfa_register 7
 158:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 159:Core/Src/stm32f1xx_it.c **** 
 160:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 161:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 162:Core/Src/stm32f1xx_it.c **** 
 163:Core/Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 164:Core/Src/stm32f1xx_it.c **** }
 223              		.loc 1 164 1
 224 0004 00BF     		nop
 225 0006 BD46     		mov	sp, r7
 226              	.LCFI18:
 227              		.cfi_def_cfa_register 13
 228              		@ sp needed
 229 0008 80BC     		pop	{r7}
 230              	.LCFI19:
 231              		.cfi_restore 7
 232              		.cfi_def_cfa_offset 0
 233 000a 7047     		bx	lr
 234              		.cfi_endproc
 235              	.LFE72:
 237              		.section	.text.PendSV_Handler,"ax",%progbits
 238              		.align	1
 239              		.global	PendSV_Handler
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu softvfp
 245              	PendSV_Handler:
 246              	.LFB73:
 165:Core/Src/stm32f1xx_it.c **** 
 166:Core/Src/stm32f1xx_it.c **** /**
 167:Core/Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 168:Core/Src/stm32f1xx_it.c ****   */
ARM GAS  /tmp/cc3cqCLn.s 			page 8


 169:Core/Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 170:Core/Src/stm32f1xx_it.c **** {
 247              		.loc 1 170 1
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 1, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 252 0000 80B4     		push	{r7}
 253              	.LCFI20:
 254              		.cfi_def_cfa_offset 4
 255              		.cfi_offset 7, -4
 256 0002 00AF     		add	r7, sp, #0
 257              	.LCFI21:
 258              		.cfi_def_cfa_register 7
 171:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 172:Core/Src/stm32f1xx_it.c **** 
 173:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 174:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 175:Core/Src/stm32f1xx_it.c **** 
 176:Core/Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 177:Core/Src/stm32f1xx_it.c **** }
 259              		.loc 1 177 1
 260 0004 00BF     		nop
 261 0006 BD46     		mov	sp, r7
 262              	.LCFI22:
 263              		.cfi_def_cfa_register 13
 264              		@ sp needed
 265 0008 80BC     		pop	{r7}
 266              	.LCFI23:
 267              		.cfi_restore 7
 268              		.cfi_def_cfa_offset 0
 269 000a 7047     		bx	lr
 270              		.cfi_endproc
 271              	.LFE73:
 273              		.section	.text.SysTick_Handler,"ax",%progbits
 274              		.align	1
 275              		.global	SysTick_Handler
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu softvfp
 281              	SysTick_Handler:
 282              	.LFB74:
 178:Core/Src/stm32f1xx_it.c **** 
 179:Core/Src/stm32f1xx_it.c **** /**
 180:Core/Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 181:Core/Src/stm32f1xx_it.c ****   */
 182:Core/Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 183:Core/Src/stm32f1xx_it.c **** {
 283              		.loc 1 183 1
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 80B5     		push	{r7, lr}
 288              	.LCFI24:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
ARM GAS  /tmp/cc3cqCLn.s 			page 9


 291              		.cfi_offset 14, -4
 292 0002 00AF     		add	r7, sp, #0
 293              	.LCFI25:
 294              		.cfi_def_cfa_register 7
 184:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 185:Core/Src/stm32f1xx_it.c **** 
 186:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 187:Core/Src/stm32f1xx_it.c ****   HAL_IncTick();
 295              		.loc 1 187 3
 296 0004 FFF7FEFF 		bl	HAL_IncTick
 188:Core/Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 189:Core/Src/stm32f1xx_it.c **** 
 190:Core/Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 191:Core/Src/stm32f1xx_it.c **** }
 297              		.loc 1 191 1
 298 0008 00BF     		nop
 299 000a 80BD     		pop	{r7, pc}
 300              		.cfi_endproc
 301              	.LFE74:
 303              		.text
 304              	.Letext0:
 305              		.file 2 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_types.h"
 306              		.file 3 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 307              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 308              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 309              		.file 6 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 310              		.file 7 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 311              		.file 8 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/stddef.h"
 312              		.file 9 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 313              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cc3cqCLn.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_it.c
     /tmp/cc3cqCLn.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/cc3cqCLn.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cc3cqCLn.s:54     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cc3cqCLn.s:61     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cc3cqCLn.s:82     .text.MemManage_Handler:0000000000000000 $t
     /tmp/cc3cqCLn.s:89     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/cc3cqCLn.s:110    .text.BusFault_Handler:0000000000000000 $t
     /tmp/cc3cqCLn.s:117    .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/cc3cqCLn.s:138    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/cc3cqCLn.s:145    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/cc3cqCLn.s:166    .text.SVC_Handler:0000000000000000 $t
     /tmp/cc3cqCLn.s:173    .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cc3cqCLn.s:202    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/cc3cqCLn.s:209    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/cc3cqCLn.s:238    .text.PendSV_Handler:0000000000000000 $t
     /tmp/cc3cqCLn.s:245    .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cc3cqCLn.s:274    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cc3cqCLn.s:281    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
