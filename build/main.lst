ARM GAS  /tmp/cc9IVFOP.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.main,"ax",%progbits
  16              		.align	1
  17              		.global	main
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	main:
  25              	.LFB66:
  26              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/main.c **** #include "main.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/cc9IVFOP.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  27              		.loc 1 67 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 84B0     		sub	sp, sp, #16
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 24
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
ARM GAS  /tmp/cc9IVFOP.s 			page 3


  75:Core/Src/main.c ****   HAL_Init();
  42              		.loc 1 75 3
  43 0006 FFF7FEFF 		bl	HAL_Init
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  44              		.loc 1 82 3
  45 000a FFF7FEFF 		bl	SystemClock_Config
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
  46              		.loc 1 89 3
  47 000e FFF7FEFF 		bl	MX_GPIO_Init
  48              	.L2:
  49              	.LBB2:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE END 2 */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* Infinite loop */
  95:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  96:Core/Src/main.c ****   while (1)
  97:Core/Src/main.c ****   {
  98:Core/Src/main.c ****     int a = 1;
  50              		.loc 1 98 9 discriminator 1
  51 0012 0123     		movs	r3, #1
  52 0014 FB60     		str	r3, [r7, #12]
  99:Core/Src/main.c ****     int b = 2;
  53              		.loc 1 99 9 discriminator 1
  54 0016 0223     		movs	r3, #2
  55 0018 BB60     		str	r3, [r7, #8]
 100:Core/Src/main.c ****     int c = 0;
  56              		.loc 1 100 9 discriminator 1
  57 001a 0023     		movs	r3, #0
  58 001c 7B60     		str	r3, [r7, #4]
 101:Core/Src/main.c ****     c = a + b;
  59              		.loc 1 101 7 discriminator 1
  60 001e FA68     		ldr	r2, [r7, #12]
  61 0020 BB68     		ldr	r3, [r7, #8]
  62 0022 1344     		add	r3, r3, r2
  63 0024 7B60     		str	r3, [r7, #4]
 102:Core/Src/main.c ****     int d = 3;
  64              		.loc 1 102 9 discriminator 1
  65 0026 0323     		movs	r3, #3
  66 0028 3B60     		str	r3, [r7]
  67              	.LBE2:
  97:Core/Src/main.c ****     int a = 1;
  68              		.loc 1 97 3 discriminator 1
  69 002a F2E7     		b	.L2
ARM GAS  /tmp/cc9IVFOP.s 			page 4


  70              		.cfi_endproc
  71              	.LFE66:
  73              		.section	.text.SystemClock_Config,"ax",%progbits
  74              		.align	1
  75              		.global	SystemClock_Config
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu softvfp
  81              	SystemClock_Config:
  82              	.LFB67:
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief System Clock Configuration
 112:Core/Src/main.c ****   * @retval None
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** void SystemClock_Config(void)
 115:Core/Src/main.c **** {
  83              		.loc 1 115 1
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 64
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 80B5     		push	{r7, lr}
  88              	.LCFI3:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 90B0     		sub	sp, sp, #64
  93              	.LCFI4:
  94              		.cfi_def_cfa_offset 72
  95 0004 00AF     		add	r7, sp, #0
  96              	.LCFI5:
  97              		.cfi_def_cfa_register 7
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  98              		.loc 1 116 22
  99 0006 07F11803 		add	r3, r7, #24
 100 000a 2822     		movs	r2, #40
 101 000c 0021     		movs	r1, #0
 102 000e 1846     		mov	r0, r3
 103 0010 FFF7FEFF 		bl	memset
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 104              		.loc 1 117 22
 105 0014 3B1D     		adds	r3, r7, #4
 106 0016 0022     		movs	r2, #0
 107 0018 1A60     		str	r2, [r3]
 108 001a 5A60     		str	r2, [r3, #4]
 109 001c 9A60     		str	r2, [r3, #8]
 110 001e DA60     		str	r2, [r3, #12]
 111 0020 1A61     		str	r2, [r3, #16]
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/cc9IVFOP.s 			page 5


 120:Core/Src/main.c ****   */
 121:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 112              		.loc 1 121 36
 113 0022 0223     		movs	r3, #2
 114 0024 BB61     		str	r3, [r7, #24]
 122:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 115              		.loc 1 122 30
 116 0026 0123     		movs	r3, #1
 117 0028 BB62     		str	r3, [r7, #40]
 123:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 118              		.loc 1 123 41
 119 002a 1023     		movs	r3, #16
 120 002c FB62     		str	r3, [r7, #44]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 121              		.loc 1 124 34
 122 002e 0023     		movs	r3, #0
 123 0030 7B63     		str	r3, [r7, #52]
 125:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 124              		.loc 1 125 7
 125 0032 07F11803 		add	r3, r7, #24
 126 0036 1846     		mov	r0, r3
 127 0038 FFF7FEFF 		bl	HAL_RCC_OscConfig
 128 003c 0346     		mov	r3, r0
 129              		.loc 1 125 6
 130 003e 002B     		cmp	r3, #0
 131 0040 01D0     		beq	.L4
 126:Core/Src/main.c ****   {
 127:Core/Src/main.c ****     Error_Handler();
 132              		.loc 1 127 5
 133 0042 FFF7FEFF 		bl	Error_Handler
 134              	.L4:
 128:Core/Src/main.c ****   }
 129:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB busses clocks 
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 135              		.loc 1 131 31
 136 0046 0F23     		movs	r3, #15
 137 0048 7B60     		str	r3, [r7, #4]
 132:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 138              		.loc 1 132 34
 139 004a 0023     		movs	r3, #0
 140 004c BB60     		str	r3, [r7, #8]
 133:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 141              		.loc 1 133 35
 142 004e 0023     		movs	r3, #0
 143 0050 FB60     		str	r3, [r7, #12]
 134:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 144              		.loc 1 134 36
 145 0052 0023     		movs	r3, #0
 146 0054 3B61     		str	r3, [r7, #16]
 135:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 147              		.loc 1 135 36
 148 0056 0023     		movs	r3, #0
 149 0058 7B61     		str	r3, [r7, #20]
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 150              		.loc 1 137 7
ARM GAS  /tmp/cc9IVFOP.s 			page 6


 151 005a 3B1D     		adds	r3, r7, #4
 152 005c 0021     		movs	r1, #0
 153 005e 1846     		mov	r0, r3
 154 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 155 0064 0346     		mov	r3, r0
 156              		.loc 1 137 6
 157 0066 002B     		cmp	r3, #0
 158 0068 01D0     		beq	.L6
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     Error_Handler();
 159              		.loc 1 139 5
 160 006a FFF7FEFF 		bl	Error_Handler
 161              	.L6:
 140:Core/Src/main.c ****   }
 141:Core/Src/main.c **** }
 162              		.loc 1 141 1
 163 006e 00BF     		nop
 164 0070 4037     		adds	r7, r7, #64
 165              	.LCFI6:
 166              		.cfi_def_cfa_offset 8
 167 0072 BD46     		mov	sp, r7
 168              	.LCFI7:
 169              		.cfi_def_cfa_register 13
 170              		@ sp needed
 171 0074 80BD     		pop	{r7, pc}
 172              		.cfi_endproc
 173              	.LFE67:
 175              		.section	.text.MX_GPIO_Init,"ax",%progbits
 176              		.align	1
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu softvfp
 182              	MX_GPIO_Init:
 183              	.LFB68:
 142:Core/Src/main.c **** 
 143:Core/Src/main.c **** /**
 144:Core/Src/main.c ****   * @brief GPIO Initialization Function
 145:Core/Src/main.c ****   * @param None
 146:Core/Src/main.c ****   * @retval None
 147:Core/Src/main.c ****   */
 148:Core/Src/main.c **** static void MX_GPIO_Init(void)
 149:Core/Src/main.c **** {
 184              		.loc 1 149 1
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 8
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188              		@ link register save eliminated.
 189 0000 80B4     		push	{r7}
 190              	.LCFI8:
 191              		.cfi_def_cfa_offset 4
 192              		.cfi_offset 7, -4
 193 0002 83B0     		sub	sp, sp, #12
 194              	.LCFI9:
 195              		.cfi_def_cfa_offset 16
 196 0004 00AF     		add	r7, sp, #0
 197              	.LCFI10:
ARM GAS  /tmp/cc9IVFOP.s 			page 7


 198              		.cfi_def_cfa_register 7
 199              	.LBB3:
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 152:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 200              		.loc 1 152 3
 201 0006 0E4B     		ldr	r3, .L8
 202 0008 9B69     		ldr	r3, [r3, #24]
 203 000a 0D4A     		ldr	r2, .L8
 204 000c 43F01003 		orr	r3, r3, #16
 205 0010 9361     		str	r3, [r2, #24]
 206 0012 0B4B     		ldr	r3, .L8
 207 0014 9B69     		ldr	r3, [r3, #24]
 208 0016 03F01003 		and	r3, r3, #16
 209 001a 7B60     		str	r3, [r7, #4]
 210 001c 7B68     		ldr	r3, [r7, #4]
 211              	.LBE3:
 212              	.LBB4:
 153:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 213              		.loc 1 153 3
 214 001e 084B     		ldr	r3, .L8
 215 0020 9B69     		ldr	r3, [r3, #24]
 216 0022 074A     		ldr	r2, .L8
 217 0024 43F00403 		orr	r3, r3, #4
 218 0028 9361     		str	r3, [r2, #24]
 219 002a 054B     		ldr	r3, .L8
 220 002c 9B69     		ldr	r3, [r3, #24]
 221 002e 03F00403 		and	r3, r3, #4
 222 0032 3B60     		str	r3, [r7]
 223 0034 3B68     		ldr	r3, [r7]
 224              	.LBE4:
 154:Core/Src/main.c **** }
 225              		.loc 1 154 1
 226 0036 00BF     		nop
 227 0038 0C37     		adds	r7, r7, #12
 228              	.LCFI11:
 229              		.cfi_def_cfa_offset 4
 230 003a BD46     		mov	sp, r7
 231              	.LCFI12:
 232              		.cfi_def_cfa_register 13
 233              		@ sp needed
 234 003c 80BC     		pop	{r7}
 235              	.LCFI13:
 236              		.cfi_restore 7
 237              		.cfi_def_cfa_offset 0
 238 003e 7047     		bx	lr
 239              	.L9:
 240              		.align	2
 241              	.L8:
 242 0040 00100240 		.word	1073876992
 243              		.cfi_endproc
 244              	.LFE68:
 246              		.section	.text.Error_Handler,"ax",%progbits
 247              		.align	1
 248              		.global	Error_Handler
 249              		.syntax unified
 250              		.thumb
ARM GAS  /tmp/cc9IVFOP.s 			page 8


 251              		.thumb_func
 252              		.fpu softvfp
 254              	Error_Handler:
 255              	.LFB69:
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /* USER CODE END 4 */
 159:Core/Src/main.c **** 
 160:Core/Src/main.c **** /**
 161:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 162:Core/Src/main.c ****   * @retval None
 163:Core/Src/main.c ****   */
 164:Core/Src/main.c **** void Error_Handler(void)
 165:Core/Src/main.c **** {
 256              		.loc 1 165 1
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261 0000 80B4     		push	{r7}
 262              	.LCFI14:
 263              		.cfi_def_cfa_offset 4
 264              		.cfi_offset 7, -4
 265 0002 00AF     		add	r7, sp, #0
 266              	.LCFI15:
 267              		.cfi_def_cfa_register 7
 166:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 167:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 170:Core/Src/main.c **** }
 268              		.loc 1 170 1
 269 0004 00BF     		nop
 270 0006 BD46     		mov	sp, r7
 271              	.LCFI16:
 272              		.cfi_def_cfa_register 13
 273              		@ sp needed
 274 0008 80BC     		pop	{r7}
 275              	.LCFI17:
 276              		.cfi_restore 7
 277              		.cfi_def_cfa_offset 0
 278 000a 7047     		bx	lr
 279              		.cfi_endproc
 280              	.LFE69:
 282              		.text
 283              	.Letext0:
 284              		.file 2 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_types.h"
 285              		.file 3 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 286              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 287              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 288              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 289              		.file 7 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 290              		.file 8 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 291              		.file 9 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/stddef.h"
 292              		.file 10 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 293              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
ARM GAS  /tmp/cc9IVFOP.s 			page 9


 294              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 295              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 296              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cc9IVFOP.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc9IVFOP.s:16     .text.main:0000000000000000 $t
     /tmp/cc9IVFOP.s:24     .text.main:0000000000000000 main
     /tmp/cc9IVFOP.s:81     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc9IVFOP.s:182    .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/cc9IVFOP.s:74     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc9IVFOP.s:254    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/cc9IVFOP.s:176    .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/cc9IVFOP.s:242    .text.MX_GPIO_Init:0000000000000040 $d
     /tmp/cc9IVFOP.s:247    .text.Error_Handler:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
