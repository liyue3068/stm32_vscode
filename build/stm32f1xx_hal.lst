ARM GAS  /tmp/ccaS0bNi.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.comm	uwTick,4,4
  16              		.global	uwTickPrio
  17              		.section	.data.uwTickPrio,"aw"
  18              		.align	2
  21              	uwTickPrio:
  22 0000 10000000 		.word	16
  23              		.global	uwTickFreq
  24              		.section	.data.uwTickFreq,"aw"
  27              	uwTickFreq:
  28 0000 01       		.byte	1
  29              		.section	.text.HAL_Init,"ax",%progbits
  30              		.align	1
  31              		.global	HAL_Init
  32              		.arch armv7-m
  33              		.syntax unified
  34              		.thumb
  35              		.thumb_func
  36              		.fpu softvfp
  38              	HAL_Init:
  39              	.LFB66:
  40              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @file    stm32f1xx_hal.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @verbatim
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     The HAL contains two APIs' categories:
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   @endverbatim
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @attention
ARM GAS  /tmp/ccaS0bNi.s 			page 2


  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Redistribution and use in source and binary forms, with or without modification,
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * are permitted provided that the following conditions are met:
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer.
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      this list of conditions and the following disclaimer in the documentation
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      and/or other materials provided with the distribution.
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      may be used to endorse or promote products derived from this software
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      without specific prior written permission.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   ******************************************************************************
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #include "stm32f1xx_hal.h"
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @addtogroup STM32F1xx_HAL_Driver
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL HAL
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief HAL module driver.
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Constants HAL Private Constants
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  * @brief STM32F1xx HAL Driver version number V1.1.3
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB1   (0x01U) /*!< [23:16] sub1 version */
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_SUB2   (0x03U) /*!< [15:8]  sub2 version */
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define __STM32F1xx_HAL_VERSION         ((__STM32F1xx_HAL_VERSION_MAIN << 24)\
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB1 << 16)\
ARM GAS  /tmp/ccaS0bNi.s 			page 3


  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_SUB2 << 8 )\
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                                         |(__STM32F1xx_HAL_VERSION_RC))
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Private_Variables HAL Private Variables
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __IO uint32_t uwTick;
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /* Exported functions ---------------------------------------------------------*/
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  *
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****               ##### Initialization and de-initialization functions #####
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    [..]  This section provides functions allowing to:
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Initializes the Flash interface, the NVIC allocation and initial clock
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           configuration. It initializes the systick also when timeout is needed
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           and the backup domain when enabled.
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) de-Initializes common part of the HAL.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Configure The time base source to have 1ms time base with a dedicated
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****           Tick interrupt priority.
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              handled in milliseconds basis.
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             ISR process will be blocked.
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
ARM GAS  /tmp/ccaS0bNi.s 			page 4


 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         HAL function), it performs the following:
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configure the Flash prefetch.
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Set NVIC Group Priority to 4.
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *           "stm32f1xx_hal_msp.c" to do the global low level hardware initialization
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *         to have correct HAL operation.
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  41              		.loc 1 159 1
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 0
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              	.LCFI1:
  52              		.cfi_def_cfa_register 7
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure Flash prefetch */
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F101x6) || defined(STM32F101xB) || defined(STM32F101xE) || defined(STM32F101xG) ||
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F102x6) || defined(STM32F102xB) || \
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) ||
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     defined(STM32F105xC) || defined(STM32F107xC)
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Prefetch buffer is not available on value line devices */
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
  53              		.loc 1 168 3
  54 0004 084B     		ldr	r3, .L3
  55 0006 1B68     		ldr	r3, [r3]
  56 0008 074A     		ldr	r2, .L3
  57 000a 43F01003 		orr	r3, r3, #16
  58 000e 1360     		str	r3, [r2]
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif /* PREFETCH_ENABLE */
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Set Interrupt Group Priority */
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  59              		.loc 1 173 3
  60 0010 0320     		movs	r0, #3
ARM GAS  /tmp/ccaS0bNi.s 			page 5


  61 0012 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
  62              		.loc 1 176 3
  63 0016 0020     		movs	r0, #0
  64 0018 FFF7FEFF 		bl	HAL_InitTick
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Init the low level hardware */
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspInit();
  65              		.loc 1 179 3
  66 001c FFF7FEFF 		bl	HAL_MspInit
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
  67              		.loc 1 182 10
  68 0020 0023     		movs	r3, #0
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
  69              		.loc 1 183 1
  70 0022 1846     		mov	r0, r3
  71 0024 80BD     		pop	{r7, pc}
  72              	.L4:
  73 0026 00BF     		.align	2
  74              	.L3:
  75 0028 00200240 		.word	1073881088
  76              		.cfi_endproc
  77              	.LFE66:
  79              		.section	.text.HAL_DeInit,"ax",%progbits
  80              		.align	1
  81              		.global	HAL_DeInit
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	HAL_DeInit:
  88              	.LFB67:
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function de-Initializes common part of the HAL and stops the systick.
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        of time base.
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is optional.
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
  89              		.loc 1 192 1
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93 0000 80B5     		push	{r7, lr}
  94              	.LCFI2:
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 00AF     		add	r7, sp, #0
  99              	.LCFI3:
 100              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccaS0bNi.s 			page 6


 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Reset of all peripherals */
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 101              		.loc 1 194 3
 102 0004 094B     		ldr	r3, .L7
 103 0006 4FF0FF32 		mov	r2, #-1
 104 000a DA60     		str	r2, [r3, #12]
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 105              		.loc 1 195 3
 106 000c 074B     		ldr	r3, .L7
 107 000e 0022     		movs	r2, #0
 108 0010 1A61     		str	r2, [r3, #16]
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 109              		.loc 1 197 3
 110 0012 064B     		ldr	r3, .L7
 111 0014 4FF0FF32 		mov	r2, #-1
 112 0018 DA60     		str	r2, [r3, #12]
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 113              		.loc 1 198 3
 114 001a 044B     		ldr	r3, .L7
 115 001c 0022     		movs	r2, #0
 116 001e DA60     		str	r2, [r3, #12]
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #if defined(STM32F105xC) || defined(STM32F107xC)
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** #endif
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* De-Init the low level hardware */
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_MspDeInit();
 117              		.loc 1 206 3
 118 0020 FFF7FEFF 		bl	HAL_MspDeInit
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 119              		.loc 1 209 10
 120 0024 0023     		movs	r3, #0
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 121              		.loc 1 210 1
 122 0026 1846     		mov	r0, r3
 123 0028 80BD     		pop	{r7, pc}
 124              	.L8:
 125 002a 00BF     		.align	2
 126              	.L7:
 127 002c 00100240 		.word	1073876992
 128              		.cfi_endproc
 129              	.LFE67:
 131              		.section	.text.HAL_MspInit,"ax",%progbits
 132              		.align	1
 133              		.weak	HAL_MspInit
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu softvfp
 139              	HAL_MspInit:
 140              	.LFB68:
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
ARM GAS  /tmp/ccaS0bNi.s 			page 7


 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Initialize the MSP.
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspInit(void)
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 141              		.loc 1 217 1
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              	.LCFI4:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 0002 00AF     		add	r7, sp, #0
 151              	.LCFI5:
 152              		.cfi_def_cfa_register 7
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 153              		.loc 1 221 1
 154 0004 00BF     		nop
 155 0006 BD46     		mov	sp, r7
 156              	.LCFI6:
 157              		.cfi_def_cfa_register 13
 158              		@ sp needed
 159 0008 80BC     		pop	{r7}
 160              	.LCFI7:
 161              		.cfi_restore 7
 162              		.cfi_def_cfa_offset 0
 163 000a 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE68:
 167              		.section	.text.HAL_MspDeInit,"ax",%progbits
 168              		.align	1
 169              		.weak	HAL_MspDeInit
 170              		.syntax unified
 171              		.thumb
 172              		.thumb_func
 173              		.fpu softvfp
 175              	HAL_MspDeInit:
 176              	.LFB69:
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  DeInitializes the MSP.
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_MspDeInit(void)
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 177              		.loc 1 228 1
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccaS0bNi.s 			page 8


 183              	.LCFI8:
 184              		.cfi_def_cfa_offset 4
 185              		.cfi_offset 7, -4
 186 0002 00AF     		add	r7, sp, #0
 187              	.LCFI9:
 188              		.cfi_def_cfa_register 7
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****    */
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 189              		.loc 1 232 1
 190 0004 00BF     		nop
 191 0006 BD46     		mov	sp, r7
 192              	.LCFI10:
 193              		.cfi_def_cfa_register 13
 194              		@ sp needed
 195 0008 80BC     		pop	{r7}
 196              	.LCFI11:
 197              		.cfi_restore 7
 198              		.cfi_def_cfa_offset 0
 199 000a 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE69:
 203              		.section	.text.HAL_InitTick,"ax",%progbits
 204              		.align	1
 205              		.weak	HAL_InitTick
 206              		.syntax unified
 207              		.thumb
 208              		.thumb_func
 209              		.fpu softvfp
 211              	HAL_InitTick:
 212              	.LFB70:
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function configures the source of the time base.
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        Tick interrupt priority.
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base.
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals.
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process,
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementation  in user file.
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval HAL status
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 213              		.loc 1 251 1
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 8
 216              		@ frame_needed = 1, uses_anonymous_args = 0
 217 0000 80B5     		push	{r7, lr}
 218              	.LCFI12:
ARM GAS  /tmp/ccaS0bNi.s 			page 9


 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 82B0     		sub	sp, sp, #8
 223              	.LCFI13:
 224              		.cfi_def_cfa_offset 16
 225 0004 00AF     		add	r7, sp, #0
 226              	.LCFI14:
 227              		.cfi_def_cfa_register 7
 228 0006 7860     		str	r0, [r7, #4]
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 229              		.loc 1 253 7
 230 0008 124B     		ldr	r3, .L16
 231 000a 1A68     		ldr	r2, [r3]
 232              		.loc 1 253 51
 233 000c 124B     		ldr	r3, .L16+4
 234 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 235 0010 1946     		mov	r1, r3
 236 0012 4FF47A73 		mov	r3, #1000
 237 0016 B3FBF1F3 		udiv	r3, r3, r1
 238              		.loc 1 253 7
 239 001a B2FBF3F3 		udiv	r3, r2, r3
 240 001e 1846     		mov	r0, r3
 241 0020 FFF7FEFF 		bl	HAL_SYSTICK_Config
 242 0024 0346     		mov	r3, r0
 243              		.loc 1 253 6
 244 0026 002B     		cmp	r3, #0
 245 0028 01D0     		beq	.L12
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 246              		.loc 1 255 12
 247 002a 0123     		movs	r3, #1
 248 002c 0EE0     		b	.L13
 249              	.L12:
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Configure the SysTick IRQ priority */
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 250              		.loc 1 259 6
 251 002e 7B68     		ldr	r3, [r7, #4]
 252 0030 0F2B     		cmp	r3, #15
 253 0032 0AD8     		bhi	.L14
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 254              		.loc 1 261 5
 255 0034 0022     		movs	r2, #0
 256 0036 7968     		ldr	r1, [r7, #4]
 257 0038 4FF0FF30 		mov	r0, #-1
 258 003c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickPrio = TickPriority;
 259              		.loc 1 262 16
 260 0040 064A     		ldr	r2, .L16+8
 261 0042 7B68     		ldr	r3, [r7, #4]
 262 0044 1360     		str	r3, [r2]
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   else
ARM GAS  /tmp/ccaS0bNi.s 			page 10


 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     return HAL_ERROR;
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Return function status */
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return HAL_OK;
 263              		.loc 1 270 10
 264 0046 0023     		movs	r3, #0
 265 0048 00E0     		b	.L13
 266              	.L14:
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 267              		.loc 1 266 12
 268 004a 0123     		movs	r3, #1
 269              	.L13:
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 270              		.loc 1 271 1
 271 004c 1846     		mov	r0, r3
 272 004e 0837     		adds	r7, r7, #8
 273              	.LCFI15:
 274              		.cfi_def_cfa_offset 8
 275 0050 BD46     		mov	sp, r7
 276              	.LCFI16:
 277              		.cfi_def_cfa_register 13
 278              		@ sp needed
 279 0052 80BD     		pop	{r7, pc}
 280              	.L17:
 281              		.align	2
 282              	.L16:
 283 0054 00000000 		.word	SystemCoreClock
 284 0058 00000000 		.word	uwTickFreq
 285 005c 00000000 		.word	uwTickPrio
 286              		.cfi_endproc
 287              	.LFE70:
 289              		.section	.text.HAL_IncTick,"ax",%progbits
 290              		.align	1
 291              		.weak	HAL_IncTick
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu softvfp
 297              	HAL_IncTick:
 298              	.LFB71:
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @}
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *  @brief    HAL Control functions
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @verbatim
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****                       ##### HAL Control functions #####
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****  ===============================================================================
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     [..]  This section provides functions allowing to:
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a tick value in millisecond
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Provide a blocking delay in millisecond
ARM GAS  /tmp/ccaS0bNi.s 			page 11


 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Suspend the time base source interrupt
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Resume the time base source interrupt
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the HAL API driver version
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device identifier
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Get the device revision identifier
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** @endverbatim
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @{
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        used as application time base.
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       in SysTick ISR.
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *      implementations in user file.
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_IncTick(void)
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 299              		.loc 1 310 1
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 1, uses_anonymous_args = 0
 303              		@ link register save eliminated.
 304 0000 80B4     		push	{r7}
 305              	.LCFI17:
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 0002 00AF     		add	r7, sp, #0
 309              	.LCFI18:
 310              		.cfi_def_cfa_register 7
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uwTick += uwTickFreq;
 311              		.loc 1 311 10
 312 0004 054B     		ldr	r3, .L19
 313 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 314 0008 1A46     		mov	r2, r3
 315 000a 054B     		ldr	r3, .L19+4
 316 000c 1B68     		ldr	r3, [r3]
 317 000e 1344     		add	r3, r3, r2
 318 0010 034A     		ldr	r2, .L19+4
 319 0012 1360     		str	r3, [r2]
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 320              		.loc 1 312 1
 321 0014 00BF     		nop
 322 0016 BD46     		mov	sp, r7
 323              	.LCFI19:
 324              		.cfi_def_cfa_register 13
 325              		@ sp needed
 326 0018 80BC     		pop	{r7}
 327              	.LCFI20:
 328              		.cfi_restore 7
 329              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccaS0bNi.s 			page 12


 330 001a 7047     		bx	lr
 331              	.L20:
 332              		.align	2
 333              	.L19:
 334 001c 00000000 		.word	uwTickFreq
 335 0020 00000000 		.word	uwTick
 336              		.cfi_endproc
 337              	.LFE71:
 339              		.section	.text.HAL_GetTick,"ax",%progbits
 340              		.align	1
 341              		.weak	HAL_GetTick
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu softvfp
 347              	HAL_GetTick:
 348              	.LFB72:
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Provides a tick value in millisecond.
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note  This function is declared as __weak to be overwritten in case of other
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick value
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 349              		.loc 1 321 1
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354 0000 80B4     		push	{r7}
 355              	.LCFI21:
 356              		.cfi_def_cfa_offset 4
 357              		.cfi_offset 7, -4
 358 0002 00AF     		add	r7, sp, #0
 359              	.LCFI22:
 360              		.cfi_def_cfa_register 7
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTick;
 361              		.loc 1 322 10
 362 0004 024B     		ldr	r3, .L23
 363 0006 1B68     		ldr	r3, [r3]
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 364              		.loc 1 323 1
 365 0008 1846     		mov	r0, r3
 366 000a BD46     		mov	sp, r7
 367              	.LCFI23:
 368              		.cfi_def_cfa_register 13
 369              		@ sp needed
 370 000c 80BC     		pop	{r7}
 371              	.LCFI24:
 372              		.cfi_restore 7
 373              		.cfi_def_cfa_offset 0
 374 000e 7047     		bx	lr
 375              	.L24:
 376              		.align	2
 377              	.L23:
ARM GAS  /tmp/ccaS0bNi.s 			page 13


 378 0010 00000000 		.word	uwTick
 379              		.cfi_endproc
 380              	.LFE72:
 382              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 383              		.align	1
 384              		.global	HAL_GetTickPrio
 385              		.syntax unified
 386              		.thumb
 387              		.thumb_func
 388              		.fpu softvfp
 390              	HAL_GetTickPrio:
 391              	.LFB73:
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function returns a tick priority.
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick priority
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 392              		.loc 1 330 1
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              	.LCFI25:
 399              		.cfi_def_cfa_offset 4
 400              		.cfi_offset 7, -4
 401 0002 00AF     		add	r7, sp, #0
 402              	.LCFI26:
 403              		.cfi_def_cfa_register 7
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickPrio;
 404              		.loc 1 331 10
 405 0004 024B     		ldr	r3, .L27
 406 0006 1B68     		ldr	r3, [r3]
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 407              		.loc 1 332 1
 408 0008 1846     		mov	r0, r3
 409 000a BD46     		mov	sp, r7
 410              	.LCFI27:
 411              		.cfi_def_cfa_register 13
 412              		@ sp needed
 413 000c 80BC     		pop	{r7}
 414              	.LCFI28:
 415              		.cfi_restore 7
 416              		.cfi_def_cfa_offset 0
 417 000e 7047     		bx	lr
 418              	.L28:
 419              		.align	2
 420              	.L27:
 421 0010 00000000 		.word	uwTickPrio
 422              		.cfi_endproc
 423              	.LFE73:
 425              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 426              		.align	1
 427              		.global	HAL_SetTickFreq
 428              		.syntax unified
ARM GAS  /tmp/ccaS0bNi.s 			page 14


 429              		.thumb
 430              		.thumb_func
 431              		.fpu softvfp
 433              	HAL_SetTickFreq:
 434              	.LFB74:
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Set new tick Freq.
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Status
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 435              		.loc 1 339 1
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 16
 438              		@ frame_needed = 1, uses_anonymous_args = 0
 439 0000 80B5     		push	{r7, lr}
 440              	.LCFI29:
 441              		.cfi_def_cfa_offset 8
 442              		.cfi_offset 7, -8
 443              		.cfi_offset 14, -4
 444 0002 84B0     		sub	sp, sp, #16
 445              	.LCFI30:
 446              		.cfi_def_cfa_offset 24
 447 0004 00AF     		add	r7, sp, #0
 448              	.LCFI31:
 449              		.cfi_def_cfa_register 7
 450 0006 0346     		mov	r3, r0
 451 0008 FB71     		strb	r3, [r7, #7]
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 452              		.loc 1 340 21
 453 000a 0023     		movs	r3, #0
 454 000c FB73     		strb	r3, [r7, #15]
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (uwTickFreq != Freq)
 455              		.loc 1 343 18
 456 000e 0A4B     		ldr	r3, .L32
 457 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 458              		.loc 1 343 6
 459 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 460 0014 9A42     		cmp	r2, r3
 461 0016 09D0     		beq	.L30
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     uwTickFreq = Freq;
 462              		.loc 1 345 16
 463 0018 074A     		ldr	r2, .L32
 464 001a FB79     		ldrb	r3, [r7, #7]
 465 001c 1370     		strb	r3, [r2]
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     /* Apply the new tick Freq  */
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 466              		.loc 1 348 14
 467 001e 074B     		ldr	r3, .L32+4
 468 0020 1B68     		ldr	r3, [r3]
 469 0022 1846     		mov	r0, r3
 470 0024 FFF7FEFF 		bl	HAL_InitTick
ARM GAS  /tmp/ccaS0bNi.s 			page 15


 471 0028 0346     		mov	r3, r0
 472 002a FB73     		strb	r3, [r7, #15]
 473              	.L30:
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return status;
 474              		.loc 1 351 10
 475 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 476              		.loc 1 352 1
 477 002e 1846     		mov	r0, r3
 478 0030 1037     		adds	r7, r7, #16
 479              	.LCFI32:
 480              		.cfi_def_cfa_offset 8
 481 0032 BD46     		mov	sp, r7
 482              	.LCFI33:
 483              		.cfi_def_cfa_register 13
 484              		@ sp needed
 485 0034 80BD     		pop	{r7, pc}
 486              	.L33:
 487 0036 00BF     		.align	2
 488              	.L32:
 489 0038 00000000 		.word	uwTickFreq
 490 003c 00000000 		.word	uwTickPrio
 491              		.cfi_endproc
 492              	.LFE74:
 494              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 495              		.align	1
 496              		.global	HAL_GetTickFreq
 497              		.syntax unified
 498              		.thumb
 499              		.thumb_func
 500              		.fpu softvfp
 502              	HAL_GetTickFreq:
 503              	.LFB75:
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return tick frequency.
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval tick period in Hz
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 504              		.loc 1 359 1
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 1, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509 0000 80B4     		push	{r7}
 510              	.LCFI34:
 511              		.cfi_def_cfa_offset 4
 512              		.cfi_offset 7, -4
 513 0002 00AF     		add	r7, sp, #0
 514              	.LCFI35:
 515              		.cfi_def_cfa_register 7
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return uwTickFreq;
 516              		.loc 1 360 10
 517 0004 024B     		ldr	r3, .L36
ARM GAS  /tmp/ccaS0bNi.s 			page 16


 518 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 519              		.loc 1 361 1
 520 0008 1846     		mov	r0, r3
 521 000a BD46     		mov	sp, r7
 522              	.LCFI36:
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 000c 80BC     		pop	{r7}
 526              	.LCFI37:
 527              		.cfi_restore 7
 528              		.cfi_def_cfa_offset 0
 529 000e 7047     		bx	lr
 530              	.L37:
 531              		.align	2
 532              	.L36:
 533 0010 00000000 		.word	uwTickFreq
 534              		.cfi_endproc
 535              	.LFE75:
 537              		.section	.text.HAL_Delay,"ax",%progbits
 538              		.align	1
 539              		.weak	HAL_Delay
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu softvfp
 545              	HAL_Delay:
 546              	.LFB76:
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *        on variable incremented.
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is incremented.
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 547              		.loc 1 375 1
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 16
 550              		@ frame_needed = 1, uses_anonymous_args = 0
 551 0000 80B5     		push	{r7, lr}
 552              	.LCFI38:
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 84B0     		sub	sp, sp, #16
 557              	.LCFI39:
 558              		.cfi_def_cfa_offset 24
 559 0004 00AF     		add	r7, sp, #0
 560              	.LCFI40:
 561              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccaS0bNi.s 			page 17


 562 0006 7860     		str	r0, [r7, #4]
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 563              		.loc 1 376 24
 564 0008 FFF7FEFF 		bl	HAL_GetTick
 565 000c B860     		str	r0, [r7, #8]
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   uint32_t wait = Delay;
 566              		.loc 1 377 12
 567 000e 7B68     		ldr	r3, [r7, #4]
 568 0010 FB60     		str	r3, [r7, #12]
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 569              		.loc 1 380 6
 570 0012 FB68     		ldr	r3, [r7, #12]
 571 0014 B3F1FF3F 		cmp	r3, #-1
 572 0018 05D0     		beq	.L41
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 573              		.loc 1 382 13
 574 001a 094B     		ldr	r3, .L42
 575 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 576 001e 1A46     		mov	r2, r3
 577              		.loc 1 382 10
 578 0020 FB68     		ldr	r3, [r7, #12]
 579 0022 1344     		add	r3, r3, r2
 580 0024 FB60     		str	r3, [r7, #12]
 581              	.L41:
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   while ((HAL_GetTick() - tickstart) < wait)
 582              		.loc 1 385 9
 583 0026 00BF     		nop
 584              	.L40:
 585              		.loc 1 385 11 discriminator 1
 586 0028 FFF7FEFF 		bl	HAL_GetTick
 587 002c 0246     		mov	r2, r0
 588              		.loc 1 385 25 discriminator 1
 589 002e BB68     		ldr	r3, [r7, #8]
 590 0030 D31A     		subs	r3, r2, r3
 591              		.loc 1 385 9 discriminator 1
 592 0032 FA68     		ldr	r2, [r7, #12]
 593 0034 9A42     		cmp	r2, r3
 594 0036 F7D8     		bhi	.L40
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   {
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   }
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 595              		.loc 1 388 1
 596 0038 00BF     		nop
 597 003a 1037     		adds	r7, r7, #16
 598              	.LCFI41:
 599              		.cfi_def_cfa_offset 8
 600 003c BD46     		mov	sp, r7
 601              	.LCFI42:
 602              		.cfi_def_cfa_register 13
 603              		@ sp needed
 604 003e 80BD     		pop	{r7, pc}
 605              	.L43:
ARM GAS  /tmp/ccaS0bNi.s 			page 18


 606              		.align	2
 607              	.L42:
 608 0040 00000000 		.word	uwTickFreq
 609              		.cfi_endproc
 610              	.LFE76:
 612              		.section	.text.HAL_SuspendTick,"ax",%progbits
 613              		.align	1
 614              		.weak	HAL_SuspendTick
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 618              		.fpu softvfp
 620              	HAL_SuspendTick:
 621              	.LFB77:
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Suspend Tick increment.
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is suspended.
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_SuspendTick(void)
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 622              		.loc 1 401 1
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627 0000 80B4     		push	{r7}
 628              	.LCFI43:
 629              		.cfi_def_cfa_offset 4
 630              		.cfi_offset 7, -4
 631 0002 00AF     		add	r7, sp, #0
 632              	.LCFI44:
 633              		.cfi_def_cfa_register 7
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Disable SysTick Interrupt */
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 634              		.loc 1 403 3
 635 0004 044B     		ldr	r3, .L45
 636 0006 1B68     		ldr	r3, [r3]
 637 0008 034A     		ldr	r2, .L45
 638 000a 23F00203 		bic	r3, r3, #2
 639 000e 1360     		str	r3, [r2]
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 640              		.loc 1 404 1
 641 0010 00BF     		nop
 642 0012 BD46     		mov	sp, r7
 643              	.LCFI45:
 644              		.cfi_def_cfa_register 13
 645              		@ sp needed
 646 0014 80BC     		pop	{r7}
 647              	.LCFI46:
 648              		.cfi_restore 7
ARM GAS  /tmp/ccaS0bNi.s 			page 19


 649              		.cfi_def_cfa_offset 0
 650 0016 7047     		bx	lr
 651              	.L46:
 652              		.align	2
 653              	.L45:
 654 0018 10E000E0 		.word	-536813552
 655              		.cfi_endproc
 656              	.LFE77:
 658              		.section	.text.HAL_ResumeTick,"ax",%progbits
 659              		.align	1
 660              		.weak	HAL_ResumeTick
 661              		.syntax unified
 662              		.thumb
 663              		.thumb_func
 664              		.fpu softvfp
 666              	HAL_ResumeTick:
 667              	.LFB78:
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Resume Tick increment.
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       is resumed.
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       implementations in user file.
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** __weak void HAL_ResumeTick(void)
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 668              		.loc 1 417 1
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 1, uses_anonymous_args = 0
 672              		@ link register save eliminated.
 673 0000 80B4     		push	{r7}
 674              	.LCFI47:
 675              		.cfi_def_cfa_offset 4
 676              		.cfi_offset 7, -4
 677 0002 00AF     		add	r7, sp, #0
 678              	.LCFI48:
 679              		.cfi_def_cfa_register 7
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   /* Enable SysTick Interrupt */
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(SysTick->CTRL, SysTick_CTRL_TICKINT_Msk);
 680              		.loc 1 419 3
 681 0004 044B     		ldr	r3, .L48
 682 0006 1B68     		ldr	r3, [r3]
 683 0008 034A     		ldr	r2, .L48
 684 000a 43F00203 		orr	r3, r3, #2
 685 000e 1360     		str	r3, [r2]
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 686              		.loc 1 420 1
 687 0010 00BF     		nop
 688 0012 BD46     		mov	sp, r7
 689              	.LCFI49:
 690              		.cfi_def_cfa_register 13
 691              		@ sp needed
ARM GAS  /tmp/ccaS0bNi.s 			page 20


 692 0014 80BC     		pop	{r7}
 693              	.LCFI50:
 694              		.cfi_restore 7
 695              		.cfi_def_cfa_offset 0
 696 0016 7047     		bx	lr
 697              	.L49:
 698              		.align	2
 699              	.L48:
 700 0018 10E000E0 		.word	-536813552
 701              		.cfi_endproc
 702              	.LFE78:
 704              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 705              		.align	1
 706              		.global	HAL_GetHalVersion
 707              		.syntax unified
 708              		.thumb
 709              		.thumb_func
 710              		.fpu softvfp
 712              	HAL_GetHalVersion:
 713              	.LFB79:
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the HAL revision
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval version 0xXYZR (8bits for each decimal, R for RC)
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 714              		.loc 1 427 1
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718              		@ link register save eliminated.
 719 0000 80B4     		push	{r7}
 720              	.LCFI51:
 721              		.cfi_def_cfa_offset 4
 722              		.cfi_offset 7, -4
 723 0002 00AF     		add	r7, sp, #0
 724              	.LCFI52:
 725              		.cfi_def_cfa_register 7
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return __STM32F1xx_HAL_VERSION;
 726              		.loc 1 428 10
 727 0004 024B     		ldr	r3, .L52
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 728              		.loc 1 429 1
 729 0006 1846     		mov	r0, r3
 730 0008 BD46     		mov	sp, r7
 731              	.LCFI53:
 732              		.cfi_def_cfa_register 13
 733              		@ sp needed
 734 000a 80BC     		pop	{r7}
 735              	.LCFI54:
 736              		.cfi_restore 7
 737              		.cfi_def_cfa_offset 0
 738 000c 7047     		bx	lr
 739              	.L53:
 740 000e 00BF     		.align	2
 741              	.L52:
ARM GAS  /tmp/ccaS0bNi.s 			page 21


 742 0010 00030101 		.word	16843520
 743              		.cfi_endproc
 744              	.LFE79:
 746              		.section	.text.HAL_GetREVID,"ax",%progbits
 747              		.align	1
 748              		.global	HAL_GetREVID
 749              		.syntax unified
 750              		.thumb
 751              		.thumb_func
 752              		.fpu softvfp
 754              	HAL_GetREVID:
 755              	.LFB80:
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Returns the device revision identifier.
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device revision identifier
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetREVID(void)
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 756              		.loc 1 443 1
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 761 0000 80B4     		push	{r7}
 762              	.LCFI55:
 763              		.cfi_def_cfa_offset 4
 764              		.cfi_offset 7, -4
 765 0002 00AF     		add	r7, sp, #0
 766              	.LCFI56:
 767              		.cfi_def_cfa_register 7
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) >> DBGMCU_IDCODE_REV_ID_Pos);
 768              		.loc 1 444 18
 769 0004 034B     		ldr	r3, .L56
 770 0006 1B68     		ldr	r3, [r3]
 771              		.loc 1 444 28
 772 0008 1B0C     		lsrs	r3, r3, #16
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 773              		.loc 1 445 1
 774 000a 1846     		mov	r0, r3
 775 000c BD46     		mov	sp, r7
 776              	.LCFI57:
 777              		.cfi_def_cfa_register 13
 778              		@ sp needed
 779 000e 80BC     		pop	{r7}
 780              	.LCFI58:
 781              		.cfi_restore 7
 782              		.cfi_def_cfa_offset 0
 783 0010 7047     		bx	lr
 784              	.L57:
ARM GAS  /tmp/ccaS0bNi.s 			page 22


 785 0012 00BF     		.align	2
 786              	.L56:
 787 0014 002004E0 		.word	-536600576
 788              		.cfi_endproc
 789              	.LFE80:
 791              		.section	.text.HAL_GetDEVID,"ax",%progbits
 792              		.align	1
 793              		.global	HAL_GetDEVID
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 797              		.fpu softvfp
 799              	HAL_GetDEVID:
 800              	.LFB81:
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Returns the device identifier.
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** uint32_t HAL_GetDEVID(void)
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 801              		.loc 1 459 1
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806 0000 80B4     		push	{r7}
 807              	.LCFI59:
 808              		.cfi_def_cfa_offset 4
 809              		.cfi_offset 7, -4
 810 0002 00AF     		add	r7, sp, #0
 811              	.LCFI60:
 812              		.cfi_def_cfa_register 7
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   return ((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 813              		.loc 1 460 18
 814 0004 034B     		ldr	r3, .L60
 815 0006 1B68     		ldr	r3, [r3]
 816              		.loc 1 460 28
 817 0008 C3F30B03 		ubfx	r3, r3, #0, #12
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 818              		.loc 1 461 1
 819 000c 1846     		mov	r0, r3
 820 000e BD46     		mov	sp, r7
 821              	.LCFI61:
 822              		.cfi_def_cfa_register 13
 823              		@ sp needed
 824 0010 80BC     		pop	{r7}
 825              	.LCFI62:
 826              		.cfi_restore 7
 827              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccaS0bNi.s 			page 23


 828 0012 7047     		bx	lr
 829              	.L61:
 830              		.align	2
 831              	.L60:
 832 0014 002004E0 		.word	-536600576
 833              		.cfi_endproc
 834              	.LFE81:
 836              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 837              		.align	1
 838              		.global	HAL_DBGMCU_EnableDBGSleepMode
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 842              		.fpu softvfp
 844              	HAL_DBGMCU_EnableDBGSleepMode:
 845              	.LFB82:
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 846              		.loc 1 468 1
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 1, uses_anonymous_args = 0
 850              		@ link register save eliminated.
 851 0000 80B4     		push	{r7}
 852              	.LCFI63:
 853              		.cfi_def_cfa_offset 4
 854              		.cfi_offset 7, -4
 855 0002 00AF     		add	r7, sp, #0
 856              	.LCFI64:
 857              		.cfi_def_cfa_register 7
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 858              		.loc 1 469 3
 859 0004 044B     		ldr	r3, .L63
 860 0006 5B68     		ldr	r3, [r3, #4]
 861 0008 034A     		ldr	r2, .L63
 862 000a 43F00103 		orr	r3, r3, #1
 863 000e 5360     		str	r3, [r2, #4]
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 864              		.loc 1 470 1
 865 0010 00BF     		nop
 866 0012 BD46     		mov	sp, r7
 867              	.LCFI65:
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 0014 80BC     		pop	{r7}
 871              	.LCFI66:
 872              		.cfi_restore 7
 873              		.cfi_def_cfa_offset 0
 874 0016 7047     		bx	lr
 875              	.L64:
 876              		.align	2
 877              	.L63:
ARM GAS  /tmp/ccaS0bNi.s 			page 24


 878 0018 002004E0 		.word	-536600576
 879              		.cfi_endproc
 880              	.LFE82:
 882              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 883              		.align	1
 884              		.global	HAL_DBGMCU_DisableDBGSleepMode
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 888              		.fpu softvfp
 890              	HAL_DBGMCU_DisableDBGSleepMode:
 891              	.LFB83:
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 892              		.loc 1 484 1
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
 895              		@ frame_needed = 1, uses_anonymous_args = 0
 896              		@ link register save eliminated.
 897 0000 80B4     		push	{r7}
 898              	.LCFI67:
 899              		.cfi_def_cfa_offset 4
 900              		.cfi_offset 7, -4
 901 0002 00AF     		add	r7, sp, #0
 902              	.LCFI68:
 903              		.cfi_def_cfa_register 7
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 904              		.loc 1 485 3
 905 0004 044B     		ldr	r3, .L66
 906 0006 5B68     		ldr	r3, [r3, #4]
 907 0008 034A     		ldr	r2, .L66
 908 000a 23F00103 		bic	r3, r3, #1
 909 000e 5360     		str	r3, [r2, #4]
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 910              		.loc 1 486 1
 911 0010 00BF     		nop
 912 0012 BD46     		mov	sp, r7
 913              	.LCFI69:
 914              		.cfi_def_cfa_register 13
 915              		@ sp needed
 916 0014 80BC     		pop	{r7}
 917              	.LCFI70:
 918              		.cfi_restore 7
 919              		.cfi_def_cfa_offset 0
 920 0016 7047     		bx	lr
ARM GAS  /tmp/ccaS0bNi.s 			page 25


 921              	.L67:
 922              		.align	2
 923              	.L66:
 924 0018 002004E0 		.word	-536600576
 925              		.cfi_endproc
 926              	.LFE83:
 928              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 929              		.align	1
 930              		.global	HAL_DBGMCU_EnableDBGStopMode
 931              		.syntax unified
 932              		.thumb
 933              		.thumb_func
 934              		.fpu softvfp
 936              	HAL_DBGMCU_EnableDBGStopMode:
 937              	.LFB84:
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On all STM32F1 devices:
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       If the system tick timer interrupt is enabled during the Stop mode
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug (DBG_STOP bit set in the DBGMCU_CR register ), it will wakeup
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       the system from Stop mode.
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Workaround: To debug the Stop mode, disable the system tick timer
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       interrupt.
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 938              		.loc 1 514 1
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 1, uses_anonymous_args = 0
 942              		@ link register save eliminated.
 943 0000 80B4     		push	{r7}
 944              	.LCFI71:
 945              		.cfi_def_cfa_offset 4
 946              		.cfi_offset 7, -4
 947 0002 00AF     		add	r7, sp, #0
 948              	.LCFI72:
 949              		.cfi_def_cfa_register 7
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 950              		.loc 1 515 3
ARM GAS  /tmp/ccaS0bNi.s 			page 26


 951 0004 044B     		ldr	r3, .L69
 952 0006 5B68     		ldr	r3, [r3, #4]
 953 0008 034A     		ldr	r2, .L69
 954 000a 43F00203 		orr	r3, r3, #2
 955 000e 5360     		str	r3, [r2, #4]
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 956              		.loc 1 516 1
 957 0010 00BF     		nop
 958 0012 BD46     		mov	sp, r7
 959              	.LCFI73:
 960              		.cfi_def_cfa_register 13
 961              		@ sp needed
 962 0014 80BC     		pop	{r7}
 963              	.LCFI74:
 964              		.cfi_restore 7
 965              		.cfi_def_cfa_offset 0
 966 0016 7047     		bx	lr
 967              	.L70:
 968              		.align	2
 969              	.L69:
 970 0018 002004E0 		.word	-536600576
 971              		.cfi_endproc
 972              	.LFE84:
 974              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 975              		.align	1
 976              		.global	HAL_DBGMCU_DisableDBGStopMode
 977              		.syntax unified
 978              		.thumb
 979              		.thumb_func
 980              		.fpu softvfp
 982              	HAL_DBGMCU_DisableDBGStopMode:
 983              	.LFB85:
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 984              		.loc 1 530 1
 985              		.cfi_startproc
 986              		@ args = 0, pretend = 0, frame = 0
 987              		@ frame_needed = 1, uses_anonymous_args = 0
 988              		@ link register save eliminated.
 989 0000 80B4     		push	{r7}
 990              	.LCFI75:
 991              		.cfi_def_cfa_offset 4
 992              		.cfi_offset 7, -4
 993 0002 00AF     		add	r7, sp, #0
 994              	.LCFI76:
ARM GAS  /tmp/ccaS0bNi.s 			page 27


 995              		.cfi_def_cfa_register 7
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 996              		.loc 1 531 3
 997 0004 044B     		ldr	r3, .L72
 998 0006 5B68     		ldr	r3, [r3, #4]
 999 0008 034A     		ldr	r2, .L72
 1000 000a 23F00203 		bic	r3, r3, #2
 1001 000e 5360     		str	r3, [r2, #4]
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 1002              		.loc 1 532 1
 1003 0010 00BF     		nop
 1004 0012 BD46     		mov	sp, r7
 1005              	.LCFI77:
 1006              		.cfi_def_cfa_register 13
 1007              		@ sp needed
 1008 0014 80BC     		pop	{r7}
 1009              	.LCFI78:
 1010              		.cfi_restore 7
 1011              		.cfi_def_cfa_offset 0
 1012 0016 7047     		bx	lr
 1013              	.L73:
 1014              		.align	2
 1015              	.L72:
 1016 0018 002004E0 		.word	-536600576
 1017              		.cfi_endproc
 1018              	.LFE85:
 1020              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 1021              		.align	1
 1022              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 1023              		.syntax unified
 1024              		.thumb
 1025              		.thumb_func
 1026              		.fpu softvfp
 1028              	HAL_DBGMCU_EnableDBGStandbyMode:
 1029              	.LFB86:
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 1030              		.loc 1 546 1
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 1, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 1035 0000 80B4     		push	{r7}
 1036              	.LCFI79:
 1037              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccaS0bNi.s 			page 28


 1038              		.cfi_offset 7, -4
 1039 0002 00AF     		add	r7, sp, #0
 1040              	.LCFI80:
 1041              		.cfi_def_cfa_register 7
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1042              		.loc 1 547 3
 1043 0004 044B     		ldr	r3, .L75
 1044 0006 5B68     		ldr	r3, [r3, #4]
 1045 0008 034A     		ldr	r2, .L75
 1046 000a 43F00403 		orr	r3, r3, #4
 1047 000e 5360     		str	r3, [r2, #4]
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 1048              		.loc 1 548 1
 1049 0010 00BF     		nop
 1050 0012 BD46     		mov	sp, r7
 1051              	.LCFI81:
 1052              		.cfi_def_cfa_register 13
 1053              		@ sp needed
 1054 0014 80BC     		pop	{r7}
 1055              	.LCFI82:
 1056              		.cfi_restore 7
 1057              		.cfi_def_cfa_offset 0
 1058 0016 7047     		bx	lr
 1059              	.L76:
 1060              		.align	2
 1061              	.L75:
 1062 0018 002004E0 		.word	-536600576
 1063              		.cfi_endproc
 1064              	.LFE86:
 1066              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1067              		.align	1
 1068              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1069              		.syntax unified
 1070              		.thumb
 1071              		.thumb_func
 1072              		.fpu softvfp
 1074              	HAL_DBGMCU_DisableDBGStandbyMode:
 1075              	.LFB87:
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * Note: On devices STM32F10xx8 and STM32F10xxB,
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xC/D/E and STM32F103xC/D/E,
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F101xF/G and STM32F103xF/G
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *                  STM32F10xx4 and STM32F10xx6
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Debug registers DBGMCU_IDCODE and DBGMCU_CR are accessible only in
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       debug mode (not accessible by the user software in normal mode).
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   *       Refer to errata sheet of these devices for more details.
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval None
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 1076              		.loc 1 562 1
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
ARM GAS  /tmp/ccaS0bNi.s 			page 29


 1081 0000 80B4     		push	{r7}
 1082              	.LCFI83:
 1083              		.cfi_def_cfa_offset 4
 1084              		.cfi_offset 7, -4
 1085 0002 00AF     		add	r7, sp, #0
 1086              	.LCFI84:
 1087              		.cfi_def_cfa_register 7
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1088              		.loc 1 563 3
 1089 0004 044B     		ldr	r3, .L78
 1090 0006 5B68     		ldr	r3, [r3, #4]
 1091 0008 034A     		ldr	r2, .L78
 1092 000a 23F00403 		bic	r3, r3, #4
 1093 000e 5360     		str	r3, [r2, #4]
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 1094              		.loc 1 564 1
 1095 0010 00BF     		nop
 1096 0012 BD46     		mov	sp, r7
 1097              	.LCFI85:
 1098              		.cfi_def_cfa_register 13
 1099              		@ sp needed
 1100 0014 80BC     		pop	{r7}
 1101              	.LCFI86:
 1102              		.cfi_restore 7
 1103              		.cfi_def_cfa_offset 0
 1104 0016 7047     		bx	lr
 1105              	.L79:
 1106              		.align	2
 1107              	.L78:
 1108 0018 002004E0 		.word	-536600576
 1109              		.cfi_endproc
 1110              	.LFE87:
 1112              		.section	.text.HAL_GetUID,"ax",%progbits
 1113              		.align	1
 1114              		.global	HAL_GetUID
 1115              		.syntax unified
 1116              		.thumb
 1117              		.thumb_func
 1118              		.fpu softvfp
 1120              	HAL_GetUID:
 1121              	.LFB88:
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** 
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** /**
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @brief Return the unique device identifier (UID based on 96 bits)
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @param UID pointer to 3 words array.
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   * @retval Device identifier
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   */
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** void HAL_GetUID(uint32_t *UID)
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** {
 1122              		.loc 1 572 1
 1123              		.cfi_startproc
 1124              		@ args = 0, pretend = 0, frame = 8
 1125              		@ frame_needed = 1, uses_anonymous_args = 0
 1126              		@ link register save eliminated.
 1127 0000 80B4     		push	{r7}
 1128              	.LCFI87:
 1129              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccaS0bNi.s 			page 30


 1130              		.cfi_offset 7, -4
 1131 0002 83B0     		sub	sp, sp, #12
 1132              	.LCFI88:
 1133              		.cfi_def_cfa_offset 16
 1134 0004 00AF     		add	r7, sp, #0
 1135              	.LCFI89:
 1136              		.cfi_def_cfa_register 7
 1137 0006 7860     		str	r0, [r7, #4]
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[0] = (uint32_t)(READ_REG(*((uint32_t *)UID_BASE)));
 1138              		.loc 1 573 12
 1139 0008 094B     		ldr	r3, .L81
 1140 000a 1A68     		ldr	r2, [r3]
 1141              		.loc 1 573 10
 1142 000c 7B68     		ldr	r3, [r7, #4]
 1143 000e 1A60     		str	r2, [r3]
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[1] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 1144              		.loc 1 574 12
 1145 0010 084A     		ldr	r2, .L81+4
 1146              		.loc 1 574 6
 1147 0012 7B68     		ldr	r3, [r7, #4]
 1148 0014 0433     		adds	r3, r3, #4
 1149              		.loc 1 574 12
 1150 0016 1268     		ldr	r2, [r2]
 1151              		.loc 1 574 10
 1152 0018 1A60     		str	r2, [r3]
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c ****   UID[2] = (uint32_t)(READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 1153              		.loc 1 575 12
 1154 001a 074A     		ldr	r2, .L81+8
 1155              		.loc 1 575 6
 1156 001c 7B68     		ldr	r3, [r7, #4]
 1157 001e 0833     		adds	r3, r3, #8
 1158              		.loc 1 575 12
 1159 0020 1268     		ldr	r2, [r2]
 1160              		.loc 1 575 10
 1161 0022 1A60     		str	r2, [r3]
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c **** }
 1162              		.loc 1 576 1
 1163 0024 00BF     		nop
 1164 0026 0C37     		adds	r7, r7, #12
 1165              	.LCFI90:
 1166              		.cfi_def_cfa_offset 4
 1167 0028 BD46     		mov	sp, r7
 1168              	.LCFI91:
 1169              		.cfi_def_cfa_register 13
 1170              		@ sp needed
 1171 002a 80BC     		pop	{r7}
 1172              	.LCFI92:
 1173              		.cfi_restore 7
 1174              		.cfi_def_cfa_offset 0
 1175 002c 7047     		bx	lr
 1176              	.L82:
 1177 002e 00BF     		.align	2
 1178              	.L81:
 1179 0030 E8F7FF1F 		.word	536868840
 1180 0034 ECF7FF1F 		.word	536868844
 1181 0038 F0F7FF1F 		.word	536868848
 1182              		.cfi_endproc
ARM GAS  /tmp/ccaS0bNi.s 			page 31


 1183              	.LFE88:
 1185              		.text
 1186              	.Letext0:
 1187              		.file 2 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/machine/_default_types.h"
 1188              		.file 3 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1189              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1190              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1191              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 1192              		.file 7 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/lock.h"
 1193              		.file 8 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/_types.h"
 1194              		.file 9 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/lib/gcc/arm-none-eabi/8.2.1/include/stddef.h"
 1195              		.file 10 "/mnt/d/gcc-arm-none-eabi-8-2018-q4-major/arm-none-eabi/include/sys/reent.h"
 1196              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1197              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccaS0bNi.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal.c
                            *COM*:0000000000000004 uwTick
     /tmp/ccaS0bNi.s:21     .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccaS0bNi.s:18     .data.uwTickPrio:0000000000000000 $d
     /tmp/ccaS0bNi.s:27     .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccaS0bNi.s:30     .text.HAL_Init:0000000000000000 $t
     /tmp/ccaS0bNi.s:38     .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccaS0bNi.s:211    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccaS0bNi.s:139    .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccaS0bNi.s:75     .text.HAL_Init:0000000000000028 $d
     /tmp/ccaS0bNi.s:80     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccaS0bNi.s:87     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccaS0bNi.s:175    .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccaS0bNi.s:127    .text.HAL_DeInit:000000000000002c $d
     /tmp/ccaS0bNi.s:132    .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccaS0bNi.s:168    .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccaS0bNi.s:204    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccaS0bNi.s:283    .text.HAL_InitTick:0000000000000054 $d
     /tmp/ccaS0bNi.s:290    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccaS0bNi.s:297    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccaS0bNi.s:334    .text.HAL_IncTick:000000000000001c $d
     /tmp/ccaS0bNi.s:340    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccaS0bNi.s:347    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccaS0bNi.s:378    .text.HAL_GetTick:0000000000000010 $d
     /tmp/ccaS0bNi.s:383    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccaS0bNi.s:390    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccaS0bNi.s:421    .text.HAL_GetTickPrio:0000000000000010 $d
     /tmp/ccaS0bNi.s:426    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccaS0bNi.s:433    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccaS0bNi.s:489    .text.HAL_SetTickFreq:0000000000000038 $d
     /tmp/ccaS0bNi.s:495    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccaS0bNi.s:502    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccaS0bNi.s:533    .text.HAL_GetTickFreq:0000000000000010 $d
     /tmp/ccaS0bNi.s:538    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccaS0bNi.s:545    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccaS0bNi.s:608    .text.HAL_Delay:0000000000000040 $d
     /tmp/ccaS0bNi.s:613    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccaS0bNi.s:620    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccaS0bNi.s:654    .text.HAL_SuspendTick:0000000000000018 $d
     /tmp/ccaS0bNi.s:659    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccaS0bNi.s:666    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccaS0bNi.s:700    .text.HAL_ResumeTick:0000000000000018 $d
     /tmp/ccaS0bNi.s:705    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccaS0bNi.s:712    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccaS0bNi.s:742    .text.HAL_GetHalVersion:0000000000000010 $d
     /tmp/ccaS0bNi.s:747    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccaS0bNi.s:754    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccaS0bNi.s:787    .text.HAL_GetREVID:0000000000000014 $d
     /tmp/ccaS0bNi.s:792    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccaS0bNi.s:799    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccaS0bNi.s:832    .text.HAL_GetDEVID:0000000000000014 $d
     /tmp/ccaS0bNi.s:837    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccaS0bNi.s:844    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccaS0bNi.s:878    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000018 $d
     /tmp/ccaS0bNi.s:883    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccaS0bNi.s:890    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
ARM GAS  /tmp/ccaS0bNi.s 			page 33


     /tmp/ccaS0bNi.s:924    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000018 $d
     /tmp/ccaS0bNi.s:929    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccaS0bNi.s:936    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
     /tmp/ccaS0bNi.s:970    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000018 $d
     /tmp/ccaS0bNi.s:975    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccaS0bNi.s:982    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccaS0bNi.s:1016   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000018 $d
     /tmp/ccaS0bNi.s:1021   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccaS0bNi.s:1028   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccaS0bNi.s:1062   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000018 $d
     /tmp/ccaS0bNi.s:1067   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccaS0bNi.s:1074   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccaS0bNi.s:1108   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000018 $d
     /tmp/ccaS0bNi.s:1113   .text.HAL_GetUID:0000000000000000 $t
     /tmp/ccaS0bNi.s:1120   .text.HAL_GetUID:0000000000000000 HAL_GetUID
     /tmp/ccaS0bNi.s:1179   .text.HAL_GetUID:0000000000000030 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriorityGrouping
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
